<?php

namespace App\Http\Controllers\api\ccDirect;

use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Log;
use App\Models\Helper\Helpers;
use App\Models\va\RequestVA;
use Carbon\Carbon;


class PaymentCreditCardController extends Controller
{

    protected $iMid;
    protected $merchantKey;
    protected $amt;
     

    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->iMid = env('CLIENT_ID');
        $this->merchantKey = env('MER_KEY');
        $this->amt = '15000';
    }

    /**
     * Generate payment credit card direct
     * 
     * @return json
     */
    public function paymentCreditCard()
    {

        $apiUrl = 'https://dev.nicepay.co.id/nicepay/direct/v2/payment';
        $ch = curl_init($apiUrl);
        $date = Carbon::now();
        $time_stamp = $date->format("YmdHis");
        $timeStamp = date('Ymd').date('His');
        $merchantKey = $this->merchantKey;

        
        $jsonData = [
        'timeStamp' => $timeStamp,
        'iMid' =>  $this->iMid,
        'tXid' => 'IONPAYTEST01202412200750097738',
        'referenceNo' => 'MrCCTst20241220075009jIzra', // Invoice Number or Reference Number Generated by merchant
        'merchantToken' => hash('sha256', $timeStamp.$this->iMid.'MrCCTst20241220075009jIzra'.$this->amt.$merchantKey),
	    'cardNo' => '5123456789012346',
	    'cardExpYymm' => '2912',
	    'cardCvv' => '101',
	    'cardHolderNm' => 'IONPAY NETWORKS',
	    'callBackUrl' => 'https://www.nicepay.co.id/IONPAY_CLIENT/paymentResult.jsp'
        ];

        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($jsonData));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_TIMEOUT, $config['timeout'] ?? 30);





        try {
            $responseBody = curl_exec($ch);
            $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);

            if ($responseBody === false || $httpCode >= 400) {
                $error = curl_error($ch);
                Log::error('Card request payment failed: ' . $error);
                throw new \Exception('CURL Error: ' . $error);
            }

            Log::info('Response Payment Request: ' . $responseBody);
        } catch (\Exception $ex) {
            Log::error('Card request payment failed: ' . $ex->getMessage());
            throw $ex;
        } finally {
            curl_close($ch);
        }

        dd($responseBody);
        return $responseBody;

    }
}